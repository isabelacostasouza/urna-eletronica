{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\lenov\\\\Downloads\\\\urna-eletronica\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { BallotBoxComponent } from './ballot-box.component';\ndescribe('BallotBoxComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [BallotBoxComponent]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(BallotBoxComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should change voting step to 1 if user is authorized', () => {\n    component.onUserAuthorized(true);\n    expect(component.voting_step).toBe(1);\n  });\n  it('should keep voting step as 0 if user is not authorized', () => {\n    component.onUserAuthorized(false);\n    expect(component.voting_step).toBe(0);\n  });\n  it('should change voting step to 2', () => {\n    component.onUserLoggedIn(true);\n    expect(component.voting_step).toBe(2);\n    expect(component.user_logged_in).toBe(true);\n    expect(component.restart_login).toBe(true);\n  });\n  it('should change voting step to 3', () => {\n    component.onUserVoted();\n    expect(component.voting_step).toBe(3);\n  });\n  it('should change voting step to 4', () => {\n    component.onEndVoting();\n    expect(component.voting_step).toBe(4);\n    expect(component.restart_login).toBe(true);\n  });\n  it('should change voting step to 5 if voting has ended', () => {\n    component.onVotingEnded(true);\n    expect(component.voting_step).toBe(5);\n  });\n});","map":{"version":3,"sources":["C:/Users/lenov/Downloads/urna-eletronica/src/app/ballot-box/ballot-box.component.spec.ts"],"names":["TestBed","BallotBoxComponent","describe","component","fixture","beforeEach","configureTestingModule","declarations","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","onUserAuthorized","voting_step","toBe","onUserLoggedIn","user_logged_in","restart_login","onUserVoted","onEndVoting","onVotingEnded"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;AACAC,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACjC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAML,OAAO,CAACM,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACN,kBAAD;AADmB,KAA/B,EAGDO,iBAHC,EAAN;AAIH,GALS,EAAV;AAMAH,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGJ,OAAO,CAACS,eAAR,CAAwBR,kBAAxB,CAAV;AACAE,IAAAA,SAAS,GAAGC,OAAO,CAACM,iBAApB;AACAN,IAAAA,OAAO,CAACO,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACV,SAAD,CAAN,CAAkBW,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,sDAAD,EAAyD,MAAM;AAC7DT,IAAAA,SAAS,CAACY,gBAAV,CAA2B,IAA3B;AACAF,IAAAA,MAAM,CAACV,SAAS,CAACa,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,wDAAD,EAA2D,MAAM;AAC/DT,IAAAA,SAAS,CAACY,gBAAV,CAA2B,KAA3B;AACAF,IAAAA,MAAM,CAACV,SAAS,CAACa,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACvCT,IAAAA,SAAS,CAACe,cAAV,CAAyB,IAAzB;AACAL,IAAAA,MAAM,CAACV,SAAS,CAACa,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACAJ,IAAAA,MAAM,CAACV,SAAS,CAACgB,cAAX,CAAN,CAAiCF,IAAjC,CAAsC,IAAtC;AACAJ,IAAAA,MAAM,CAACV,SAAS,CAACiB,aAAX,CAAN,CAAgCH,IAAhC,CAAqC,IAArC;AACH,GALC,CAAF;AAMAL,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACvCT,IAAAA,SAAS,CAACkB,WAAV;AACAR,IAAAA,MAAM,CAACV,SAAS,CAACa,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACH,GAHC,CAAF;AAIAL,EAAAA,EAAE,CAAC,gCAAD,EAAmC,MAAM;AACvCT,IAAAA,SAAS,CAACmB,WAAV;AACAT,IAAAA,MAAM,CAACV,SAAS,CAACa,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACAJ,IAAAA,MAAM,CAACV,SAAS,CAACiB,aAAX,CAAN,CAAgCH,IAAhC,CAAqC,IAArC;AACH,GAJC,CAAF;AAKAL,EAAAA,EAAE,CAAC,oDAAD,EAAuD,MAAM;AAC3DT,IAAAA,SAAS,CAACoB,aAAV,CAAwB,IAAxB;AACAV,IAAAA,MAAM,CAACV,SAAS,CAACa,WAAX,CAAN,CAA8BC,IAA9B,CAAmC,CAAnC;AACH,GAHC,CAAF;AAIH,CA5CO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { BallotBoxComponent } from './ballot-box.component';\r\ndescribe('BallotBoxComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [BallotBoxComponent]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(BallotBoxComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should change voting step to 1 if user is authorized', () => {\r\n        component.onUserAuthorized(true);\r\n        expect(component.voting_step).toBe(1);\r\n    });\r\n    it('should keep voting step as 0 if user is not authorized', () => {\r\n        component.onUserAuthorized(false);\r\n        expect(component.voting_step).toBe(0);\r\n    });\r\n    it('should change voting step to 2', () => {\r\n        component.onUserLoggedIn(true);\r\n        expect(component.voting_step).toBe(2);\r\n        expect(component.user_logged_in).toBe(true);\r\n        expect(component.restart_login).toBe(true);\r\n    });\r\n    it('should change voting step to 3', () => {\r\n        component.onUserVoted();\r\n        expect(component.voting_step).toBe(3);\r\n    });\r\n    it('should change voting step to 4', () => {\r\n        component.onEndVoting();\r\n        expect(component.voting_step).toBe(4);\r\n        expect(component.restart_login).toBe(true);\r\n    });\r\n    it('should change voting step to 5 if voting has ended', () => {\r\n        component.onVotingEnded(true);\r\n        expect(component.voting_step).toBe(5);\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}